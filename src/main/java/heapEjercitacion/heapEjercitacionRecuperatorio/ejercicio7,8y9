7) Aplique el algoritmo HeapSort, para ordenar descendentemente los siguientes elementos:
{15, 18, 40, 1, 7, 10, 33, 2, 140, 500, 11, 12, 13, 90}
Muestre paso a paso la ejecución del algoritmo sobre los datos.

{1 2 10 7 11 12 33 18 140 500 15 40 13 90}

                                1
                2                              10
        7              11              12              33
    18      140     500    15      40      13      90     
-----------------------------------------------------------------------------------
{2 7 10 18 11 12 33 90 140 500 15 40 13} 1

                                2
                7                              10
        18              11              12              33
    90      140     500    15      40      13           
-----------------------------------------------------------------------------------
{7 11 10 18 13 12 33 90 140 500 15 40} 2 1

                                7
                11                              10
        18              13              12              33
    90      140     500    15      40                 
-----------------------------------------------------------------------------------
{10 11 12 18 13 40 33 90 140 500 15} 7 2 1

                                10
                11                              12
        18              13              40              33
    90      140     500    15                       
-----------------------------------------------------------------------------------
{11 13 12 18 15 40 33 90 140 500} 10 7 2 1

                                11
                13                              12
        18              15              40              33
    90      140     500                           
-----------------------------------------------------------------------------------
{12 13 33 18 15 40 500 90 140} 11 10 7 2 1

                                12
                13                              33
        18              15              40              500
    90      140                               
-----------------------------------------------------------------------------------
{13 15 33 18 140 40 500 90} 12 11 10 7 2 1

                                13
                15                              33
        18              140              40              500
    90                                
-----------------------------------------------------------------------------------
{15 18 33 90 140 40 500} 13 12 11 10 7 2 1

                                15
                18                              33
        90              140              40              500                               
-----------------------------------------------------------------------------------
{18 90 33 500 140 40} 15 13 12 11 10 7 2 1

                                18
                90                              33
        500              140              40                                             
-----------------------------------------------------------------------------------
{33 90 40 500 140} 18 15 13 12 11 10 7 2 1

                                33
                90                              40
        500              140                                                           
-----------------------------------------------------------------------------------
{40 90 140 500} 33 18 15 13 12 11 10 7 2 1

                                40
                90                              140
        500                                                                       
-----------------------------------------------------------------------------------
{90 500  140} 40 33 18 15 13 12 11 10 7 2 1

                                90
                500                              140                                                                       
-----------------------------------------------------------------------------------
{140 500} 90 40 33 18 15 13 12 11 10 7 2 1

                                140 
                500                                                                                              
-----------------------------------------------------------------------------------
{500} 140 90 40 33 18 15 13 12 11 10 7 2 1

                                500                                                                                     
-----------------------------------------------------------------------------------

Ejercicio 8
Construir una max-heap binaria con los siguientes datos:
{5, 8, 12, 9, 7, 10, 21, 6, 14, 4}
a) Insertándolos de a uno

                            5
---------------------------------------------------------------  
                            8
                5   
---------------------------------------------------------------  
                            12
                5                       8
---------------------------------------------------------------  
                            12
                9                       8
        5  
---------------------------------------------------------------  
                            12
                9                       8
        5               7
---------------------------------------------------------------  
                            12
                9                       10
        5               7       8
---------------------------------------------------------------  
                            21
                9                       12
        5               7       8               10
---------------------------------------------------------------  
                            21
                9                       12
        6               7       8               10
    5 
---------------------------------------------------------------  
                            21
                14                       12
        9               7       8               10
    5       6      
---------------------------------------------------------------  
                            21
                14                       12
        9               7       8               10
    5       6        4         
             
b) Usando el algoritmo BuildHeap
{5, 8, 12, 9, 7, 10, 21, 6, 14, 4}

                            5
                8                       12
        9               7       10              21
    6       14      4
-----------------------------------------------------------------
Filtramos el 9

                            5
                8                       12
        14               7       10              21
    6       9      4
-----------------------------------------------------------------
Filtramos el 12

                            5
                8                       21
        14               7       10              12
    6       9      4
-----------------------------------------------------------------
Filtramos el 8

                            5
                14                       21
        9               7       10              12
    6       8      4
-----------------------------------------------------------------
Filtramos el 5

                            21
                14                       12
        9               7       10              5
    6       8      4


9)
                        11
            21                      16
    37              36       27             32
43      44      42      51  62  34                      RTA = A[3]








